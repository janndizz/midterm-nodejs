version: "3.8"

services:
  redis:
    image: redis:alpine
    networks:
      - app-network
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3

  mongo:
    image: mongo:latest
    networks:
      - app-network
    volumes:
      - mongo-data:/data/db
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
    environment:
      - MONGO_INITDB_DATABASE=blogdb

  backend:
    image: nguyenlher/blog-backend:latest
    networks:
      - app-network
    volumes:
      - shared-uploads:/app/uploads
    environment:
      - MONGO_URI=mongodb://mongo:27017/blogdb
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - NODE_ENV=production
    deploy:
      replicas: 3
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
        order: start-first
      rollback_config:
        parallelism: 1
        delay: 5s
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - mongo
      - redis

  file-processor:
    image: nguyenlher/blog-backend:latest
    command: ["node", "src/workers/fileProcessor.js"]
    networks:
      - app-network
    volumes:
      - shared-uploads:/app/uploads
    environment:
      - MONGO_URI=mongodb://mongo:27017/blogdb
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - NODE_ENV=production
    deploy:
      replicas: 2
      placement:
        max_replicas_per_node: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  frontend:
      image: nguyenlher/blog-frontend:latest
      networks:
        - app-network
      environment:
        - REACT_APP_API_URL=/api
        - NODE_OPTIONS=--max-old-space-size=1024
        - WDS_SOCKET_PORT=0
        - WATCHPACK_POLLING=true
      deploy:
        replicas: 1
        update_config:
          parallelism: 1
          delay: 10s
          failure_action: rollback
        restart_policy:
          condition: on-failure
          delay: 5s
          max_attempts: 3
        resources:
          limits:
            cpus: '0.5'
            memory: 1536M
          reservations:
            cpus: '0.25'
            memory: 768M

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    networks:
      - app-network
    volumes:
      - ./nginx-swarm.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    deploy:
      replicas: 2
      placement:
        max_replicas_per_node: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
    depends_on:
      - backend
      - frontend

volumes:
  mongo-data:
    driver: local
  shared-uploads:
    driver: local

networks:
  app-network:
    driver: overlay
    attachable: true