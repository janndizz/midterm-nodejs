version: "3"

services:
  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network
  
  file-processor:
    build: ./backend
    container_name: file-processor
    environment:
      - MONGO_URI=mongodb://mongo:27017/blogdb
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    command: ["node", "src/workers/fileProcessor.js"]
    volumes:
      - shared-uploads:/app/uploads
      - /app/node_modules
    depends_on:
      - mongo
      - redis
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx.conf
      - ./static:/var/www/static
    depends_on:
      - backend1
      - backend2
      - backend3
      - frontend
    networks:
      - app-network

  mongo:
    image: mongo:latest
    container_name: mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - app-network

  backend1:
    build: ./backend
    container_name: backend1
    restart: always
    ports:
      - "5000:5000"
    environment:
      - MONGO_URI=mongodb://mongo:27017/blogdb
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - shared-uploads:/app/uploads
      - /app/node_modules
    depends_on:
      - mongo
      - redis
    networks:
      - app-network

  backend2:
    build: ./backend
    container_name: backend2
    restart: always
    ports:
      - "5001:5000"
    environment:
      - MONGO_URI=mongodb://mongo:27017/blogdb
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - shared-uploads:/app/uploads
      - /app/node_modules
    depends_on:
      - mongo
      - redis
    networks:
      - app-network

  backend3:
    build: ./backend
    container_name: backend3
    restart: always
    ports:
      - "5002:5000"
    environment:
      - MONGO_URI=mongodb://mongo:27017/blogdb
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - shared-uploads:/app/uploads
      - /app/node_modules
    depends_on:
      - mongo
      - redis
    networks:
      - app-network

  frontend:
    build: ./frontend
    container_name: frontend
    restart: always
    ports:
      - "3000:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true 
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: ["npm", "start"]
    depends_on:
      - backend1
      - backend2
      - backend3
    networks:
      - app-network

volumes:
  mongo-data:
  shared-uploads:

networks:
  app-network:
    driver: bridge
